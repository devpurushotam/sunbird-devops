- hosts: postgresql-master
  tasks:
    - name: Check systemctl status postgresql
      service:
        name: postgresql
        state: started
      register: postgresql_status
    - name: Print PostgreSQL service status
      debug:
        msg: "PostgreSQL Service Status: {{ postgresql_status.state }}"

- hosts: lp-cassandra
  tasks:
    - name: Check Cassandra service status
      service:
        name: cassandra
        state: started
      register: cassandra_status
    - name: Print Cassandra service status
      debug:
        msg: "Cassandra Service Status: {{ cassandra_status.state }}"

- hosts: lp-composite-ps
  tasks:
    - name: Check Elasticsearch Port
      command: nc -z -v -w 2 {{ inventory_hostname }} 9200
      ignore_errors: yes
      register: nc_result

- hosts: processing-cluster-kafka-1
  tasks:
    - name: Check kafka service status
      service:
        name: kafka
        state: started
      register: kafka_status
    - name: Print Kafka service status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.state }}"

- hosts: processing-cluster-kafka-2
  tasks:
    - name: Check kafka service status
      service:
        name: kafka
        state: started
      register: kafka_status
    - name: Print Kafka service status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.state }}"

- hosts: processing-cluster-kafka-3
  tasks:
    - name: Check kafka service status
      service:
        name: kafka
        state: started
      register: kafka_status
    - name: Print Kafka service status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.state }}"

- hosts: lp-redis-ps
  tasks:
    - name: Check redis service status
      service:
        name: redis
        state: started
      register: redis_status
    - name: Print Redis service status
      debug:
        msg: "Redis Service Status: {{ redis_status.state }}"

- hosts: log-es-2
  tasks:
    - name: Check Elasticsearch service status
      service:
        name: elasticsearch
        state: started
      register: elasticsearch_status
    - name: Print Elasticsearch service status
      debug:
        msg: "Elasticsearch Service Status: {{ elasticsearch_status.state }}"

- hosts: lp-neo4j-ps
  become: yes
  tasks:
    - name: Check Neo4j Service Status
      command: /home/learning/neo4j-learning/neo4j-enterprise-3.3.10-SNAPSHOT/bin/neo4j status
      register: neo4j_status
      ignore_errors: yes  # Ignore errors in case Neo4j service is not installed or enabled

    - name: Print Neo4j Service Status
      debug:
        msg: "Neo4j Service Status: {{ neo4j_status.stdout }}"
      when: neo4j_status.rc == 0  # Print status only if the command was successful

- hosts: lp-learning-ps
  gather_facts: yes

  tasks:
    - name: Gather facts about services
      service_facts:

    - name: Print Java service status
      debug:
        msg: "Java Service Status: running"
      when: "'learning' in ansible_services | map(attribute='user') | list"
      ignore_errors: yes

    - name: Print Logstash service status
      debug:
        msg: "Logstash Service Status: {{ 'active' if 'logstash.service' in ansible_services.keys() else 'inactive' }}"
      ignore_errors: yes
