- hosts: postgresql-master
  tasks:
    - name: Check systemctl status postgresql
      service:
        name: postgresql
        state: started
      register: postgresql_status
    - name: Print PostgreSQL service status
      debug:
        msg: "PostgreSQL Service Status: {{ postgresql_status.state }}"

- hosts: lp-cassandra
  tasks:
    - name: Check Cassandra service status
      service:
        name: cassandra
        state: started
      register: cassandra_status
    - name: Print Cassandra service status
      debug:
        msg: "Cassandra Service Status: {{ cassandra_status.state }}"

- hosts: lp-composite-ps
  tasks:
    - name: Check Elasticsearch Port
      command: nc -z -v -w 2 {{ inventory_hostname }} 9200
      ignore_errors: yes
      register: nc_result

- hosts: processing-cluster-kafka-1
  tasks:
    - name: Check kafka service status
      service:
        name: kafka
        state: started
      register: kafka_status
    - name: Print Kafka service status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.state }}"

- hosts: processing-cluster-kafka-2
  tasks:
    - name: Check kafka service status
      service:
        name: kafka
        state: started
      register: kafka_status
    - name: Print Kafka service status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.state }}"

- hosts: processing-cluster-kafka-3
  tasks:
    - name: Check kafka service status
      service:
        name: kafka
        state: started
      register: kafka_status
    - name: Print Kafka service status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.state }}"

- hosts: lp-redis-ps
  tasks:
    - name: Check redis service status
      service:
        name: redis
        state: started
      register: redis_status
    - name: Print Redis service status
      debug:
        msg: "Redis Service Status: {{ redis_status.state }}"

- hosts: log-es-2
  tasks:
    - name: Check Elasticsearch service status
      service:
        name: elasticsearch
        state: started
      register: elasticsearch_status
    - name: Print Elasticsearch service status
      debug:
        msg: "Elasticsearch Service Status: {{ elasticsearch_status.state }}"

- hosts: lp-learning-ps
  tasks:
    - name: Check Logstash service status
      command: systemctl status logstash
      register: logstash_status
      ignore_errors: yes  # Ignore errors in case logstash service is not installed or enabled

    - name: Print Logstash service status
      debug:
        msg: "Logstash Service Status: {{ logstash_status.stdout }}"
      when: logstash_status.rc == 0  # Print status only if the command was successful

#- hosts: lp-neo4j-ps
#  tasks:
#    - name: Check Neo4j Service Status
#      systemd:
#        name: neo4j
#        state: started
#        enabled: yes
#      register: service_status

#    - name: Print Neo4j Service Status
#      debug:
#        msg: "Neo4j Service Status: {{ service_status.state }}"
