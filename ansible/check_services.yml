# - hosts: cassandra  
#   tasks:
#     - name: Check Cassandra service status
#       service:
#         name: cassandra
#         state: started
#       register: cassandra_status
      
#     - name: Print Cassandra service status
#       debug:
#         msg: "Cassandra Service Status: {{ cassandra_status.state }}"

# - hosts: lp-neo4j-ps
#   tasks:
#     - name: Check Neo4j Service Status
#       command: "/home/learning/neo4j-learning/neo4j-community-3.3.9/bin/neo4j status"
#       register: service_status
#       changed_when: false
#       become: true

#     - name: Print Neo4j service status
#       debug:
#         msg: "Neo4j Service Status: {{ service_status.stdout }}"

# - hosts: composite-search-cluster
#   tasks:
#     - name: Check Elasticsearch Port
#       command: "nc -z -v -w 2 {{ inventory_hostname }} 9200"
#       ignore_errors: yes
#       register: nc_result      
-
- hosts: lp-redis-ps
  tasks:
    - name: Check redis service status
      service:
        name: redis
        state: started
      register: redis_status

    - name: Print Redis service status
      debug:
        msg: "Redis Service Status: {{ redis_status.state }}"

# - hosts: kafka
#   tasks:
#     - name: Check kafka service status
#       service:
#         name: kafka
#         state: started
#       register: kafka_status

#     - name: Print Kafka service status
#       debug:
#         msg: "Kafka Service Status: {{ kafka_status.state }}"

# - hosts: lp-learning-ps
#   tasks:
#     - name: Check Tomcat Port (learning VM)
#       command: "nc -z -v -w 2 {{ inventory_hostname }} 8080"
#       ignore_errors: yes
#       register: nc_tomcat_result

    # Add debug task here if needed for Tomcat service status

# - hosts: internal-proxy
#   tasks:
#     - name: Check Kong Port (Internal proxy)
#       command: "nc -z -v -w 2 {{ inventory_hostname }} 8000"
#       ignore_errors: yes
#       register: nc_kong_result

# - hosts: dp-influx-ps
#   tasks:
#     - name: Check systemctl status influxdb
#       service:
#         name: influxdb
#         state: started
#       register: influxdb_status
      
#     - name: Print InfluxDB service status
#       debug:
#         msg: "InfluxDB Service Status: {{ influxdb_status.state }}"

# - hosts: postgresql-master-1
#   tasks:
#     - name: Check systemctl status postgresql
#       service:
#         name: postgresql
#         state: started
#       register: postgresql_status 

#     - name: Print PostgreSQL service status
#       debug:
#         msg: "PostgreSQL Service Status: {{ postgresql_status.state }}"

