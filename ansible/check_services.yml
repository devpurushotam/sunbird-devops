- hosts: postgresql-master
  become: yes
  tasks:
    - name: Check Postgresql Service Status
      command: systemctl is-active postgresql
      register: postgresql_status
      ignore_errors: yes  # Ignore errors in case Postgresql service is not installed or enabled

    - name: Print Postgresql Service Status
      debug:
        msg: "Postgresql Service Status: {{ postgresql_status.stdout }}"
      when: postgresql_status.rc == 0  # Print status only if the command was successful


- hosts: lp-cassandra
  become: yes
  tasks:
    - name: Check Cassandra Service Status
      command: systemctl status cassandra
      register: cassandra_status
      ignore_errors: yes  # Ignore errors in case Cassandra service is not installed or enabled

    - name: Print Cassandra Service Status
      debug:
        msg: "Cassandra Service Status: {{ cassandra_status.stdout }}"
      when: cassandra_status.rc == 0  # Print status only if the command was successful


- hosts: lp-composite-ps
  tasks:
    - name: Check Elasticsearch Port
      command: nc -z -v -w 2 {{ inventory_hostname }} 9200
      ignore_errors: yes
      register: nc_result

- hosts: processing-cluster-kafka-1
  become: yes
  tasks:
    - name: Check Kafka Service Status
      command: systemctl status kafka
      register: kafka_status
      ignore_errors: yes  # Ignore errors in case Kafka service is not installed or enabled

    - name: Print Kafka Service Status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.stdout }}"
      when: kafka_status.rc == 0  # Print status only if the command was successful

- hosts: processing-cluster-kafka-2
  become: yes
  tasks:
    - name: Check Kafka Service Status
      command: systemctl status kafka
      register: kafka_status
      ignore_errors: yes  # Ignore errors in case Kafka service is not installed or enabled

    - name: Print Kafka Service Status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.stdout }}"
      when: kafka_status.rc == 0  # Print status only if the command was successful

- hosts: processing-cluster-kafka-3
  become: yes
  tasks:
    - name: Check Kafka Service Status
      command: systemctl status kafka
      register: kafka_status
      ignore_errors: yes  # Ignore errors in case Kafka service is not installed or enabled

    - name: Print Kafka Service Status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.stdout }}"
      when: kafka_status.rc == 0  # Print status only if the command was successful

- hosts: lp-redis-ps
  tasks:
    - name: Check Redis service status
      command: systemctl status redis
      register: redis_status
      ignore_errors: yes  # Ignore errors in case Redis service is not installed or enabled

    - name: Print Redis Service Status
      debug:
        msg: "Redis Service Status: {{ redis_status.stdout }}"
      when: redis_status.rc == 0  # Print status only if the command was successful

- hosts: log-es-2
  tasks:
    - name: Check Elasticsearch service status
      command: systemctl status elasticsearch
      register: elasticsearch_status
      ignore_errors: yes  # Ignore errors in case Elasticsearch service is not installed or enabled

    - name: Print Elasticsearch Service Status
      debug:
        msg: "Elasticsearch Service Status: {{ elasticsearch_status.stdout }}"
      when: elasticsearch_status.rc == 0  # Print status only if the command was successful


- hosts: lp-neo4j-ps
  become: yes
  tasks:
    - name: Check Neo4j Service Status
      command: /home/learning/neo4j-learning/neo4j-enterprise-3.3.10-SNAPSHOT/bin/neo4j status
      register: neo4j_status
      ignore_errors: yes  # Ignore errors in case Neo4j service is not installed or enabled

    - name: Print Neo4j Service Status
      debug:
        msg: "Neo4j Service Status: {{ neo4j_status.stdout }}"
      when: neo4j_status.rc == 0  # Print status only if the command was successful

- hosts: lp-learning-ps
  tasks:
    - name: Check Java service status
      shell: ps -ef | grep java
      register: java_status
      ignore_errors: yes  # Ignore errors in case Java service is not running or installed

    - name: Print Java Service Status
      debug:
        msg: "Java Service Status: {{ java_status.stdout }}"
      when: java_status.rc == 0  # Print status only if the command was successful

    - name: Check Logstash service status
      command: systemctl status logstash
      register: logstash_status
      ignore_errors: yes  # Ignore errors in case Logstash service is not installed or enabled

    - name: Print Logstash Service Status
      debug:
        msg: "Logstash Service Status: {{ logstash_status.stdout }}"
      when: logstash_status.rc == 0  # Print status only if the command was successful
