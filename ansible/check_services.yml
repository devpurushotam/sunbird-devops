- hosts: postgresql-master
  tasks:
    - name: Check PostgreSQL service status
      systemd:
        name: postgresql
        state: status
      register: postgresql_status

    - name: Print PostgreSQL Service Status
      debug:
        msg: "PostgreSQL Service Status: {{ postgresql_status.status }}"

- hosts: lp-cassandra
  tasks:
    - name: Check Cassandra service status
      service:
        name: cassandra
        state: started
      register: cassandra_status
    - name: Print Cassandra service status
      debug:
        msg: "Cassandra Service Status: {{ cassandra_status.state }}"

- hosts: lp-composite-ps
  tasks:
    - name: Check Elasticsearch Port
      command: nc -z -v -w 2 {{ inventory_hostname }} 9200
      ignore_errors: yes
      register: nc_result

- hosts: processing-cluster-kafka-1
  tasks:
    - name: Check kafka service status
      service:
        name: kafka
        state: started
      register: kafka_status
    - name: Print Kafka service status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.state }}"

- hosts: processing-cluster-kafka-2
  tasks:
    - name: Check kafka service status
      service:
        name: kafka
        state: started
      register: kafka_status
    - name: Print Kafka service status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.state }}"

- hosts: processing-cluster-kafka-3
  tasks:
    - name: Check kafka service status
      service:
        name: kafka
        state: started
      register: kafka_status
    - name: Print Kafka service status
      debug:
        msg: "Kafka Service Status: {{ kafka_status.state }}"

- hosts: lp-redis-ps
  tasks:
    - name: Check redis service status
      service:
        name: redis
        state: started
      register: redis_status
    - name: Print Redis service status
      debug:
        msg: "Redis Service Status: {{ redis_status.state }}"

- hosts: log-es-2
  tasks:
    - name: Check Elasticsearch service status
      service:
        name: elasticsearch
        state: started
      register: elasticsearch_status
    - name: Print Elasticsearch service status
      debug:
        msg: "Elasticsearch Service Status: {{ elasticsearch_status.state }}"

- hosts: lp-neo4j-ps
  become: yes
  tasks:
    - name: Check Neo4j Service Status
      command: /home/learning/neo4j-learning/neo4j-enterprise-3.3.10-SNAPSHOT/bin/neo4j status
      register: neo4j_status
      ignore_errors: yes  # Ignore errors in case Neo4j service is not installed or enabled

    - name: Print Neo4j Service Status
      debug:
        msg: "Neo4j Service Status: {{ neo4j_status.stdout }}"
      when: neo4j_status.rc == 0  # Print status only if the command was successful

- hosts: lp-learning-ps
  tasks:
    - name: Check Java service status
      shell: ps -ef | grep java
      register: java_status
      ignore_errors: yes  # Ignore errors in case Java service is not running or installed

    - name: Print Java Service Status
      debug:
        msg: "Java Service Status: {{ java_status.stdout }}"
      when: java_status.rc == 0  # Print status only if the command was successful

    - name: Check Logstash service status
      command: systemctl status logstash
      register: logstash_status
      ignore_errors: yes  # Ignore errors in case Logstash service is not installed or enabled

    - name: Print Logstash Service Status
      debug:
        msg: "Logstash Service Status: {{ logstash_status.stdout }}"
      when: logstash_status.rc == 0  # Print status only if the command was successful
