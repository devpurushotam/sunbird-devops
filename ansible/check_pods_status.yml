- name: Check Pod Status in All Namespaces
  hosts: localhost
  gather_facts: no
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - name: Check Non-Running Pods in Namespaces
      shell: kubectl get pods -A | grep -v Running
      register: non_running_pods
      changed_when: false
      failed_when: false
      ignore_errors: true

    - name: Segregate Non-Running Pods
      set_fact:
        error_pods: []
        container_unknown_pods: []
        crashloop_backoff_pods: []
        unknown_pods: []
      when: non_running_pods.stdout != ""

    - name: Extract Pod Status
      set_fact:
        pod_statuses: "{{ non_running_pods.stdout_lines | map(attribute='split') | map('last') | list }}"
      when: non_running_pods.stdout_lines | length > 0

    - name: Group Pods by Status
      block:
        - name: Loop over Pod Statuses
          set_fact:
            error_pods: "{{ error_pods + [item] }}"
          loop: "{{ pod_statuses }}"
          when: "'Error' in item"

        - set_fact:
            container_unknown_pods: "{{ container_unknown_pods + [item] }}"
          loop: "{{ pod_statuses }}"
          when: "'ContainerCreating' in item or 'ContainerCreating,' in item"

        - set_fact:
            crashloop_backoff_pods: "{{ crashloop_backoff_pods + [item] }}"
          loop: "{{ pod_statuses }}"
          when: "'CrashLoopBackOff' in item"

        - set_fact:
            unknown_pods: "{{ unknown_pods + [item] }}"
          loop: "{{ pod_statuses }}"
          when: "'Error' not in item and 'ContainerCreating' not in item and 'CrashLoopBackOff' not in item"

    - name: Print Segregated Non-Running Pods
      debug:
        msg: |
          Error Pods: {{ error_pods | join(', ') }}
          Container Status Unknown Pods: {{ container_unknown_pods | join(', ') }}
          CrashLoop Back-Off Pods: {{ crashloop_backoff_pods | join(', ') }}
          Unknown Pods: {{ unknown_pods | join(', ') }}
