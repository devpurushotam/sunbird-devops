---
- name: Check Pod Status in All Namespaces
  hosts: localhost
  gather_facts: no
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - name: Check Running Pods in Namespaces
      shell: kubectl get pods -A --field-selector=status.phase=Running -o custom-columns=NAMESPACE:.metadata.namespace,NAME:.metadata.name,READY:.status.replicas,STATUS:.status.phase,RESTARTS:.status.containerStatuses[0].restartCount,AGE:custom-columns='AGE':.metadata.creationTimestamp
      register: running_pods
      changed_when: false
      failed_when: false

    - name: Format AGE for Running Pods
      set_fact:
        running_pods_formatted: "{{ running_pods.stdout_lines[0] }}, AGE"

    - name: Print Running Pods
      debug:
        msg: "{{ running_pods_formatted }}\n{% for line in running_pods.stdout_lines[1:] %}{{ line }}\n{% endfor %}"
      when: running_pods.stdout_lines | length > 1

    - name: Check Non-Running Pods in Namespaces
      shell: kubectl get pods -A --field-selector=status.phase!=Running -o custom-columns=NAMESPACE:.metadata.namespace,NAME:.metadata.name,READY:.status.replicas,STATUS:.status.phase,RESTARTS:.status.containerStatuses[0].restartCount,AGE:custom-columns='AGE':.metadata.creationTimestamp
      register: non_running_pods
      changed_when: false
      failed_when: false

    - name: Format AGE for Non-Running Pods
      set_fact:
        non_running_pods_formatted: "{{ non_running_pods.stdout_lines[0] }}, AGE"

    - name: Print Non-Running Pods
      debug:
        msg: "{{ non_running_pods_formatted }}\n{% for line in non_running_pods.stdout_lines[1:] %}{{ line }}\n{% endfor %}"
      when: non_running_pods.stdout_lines | length > 1
