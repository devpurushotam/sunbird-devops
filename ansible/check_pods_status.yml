---
- name: Check Pod Status in All Namespaces
  hosts: localhost
  gather_facts: no
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - name: Check Running Pods in Namespaces
      shell: kubectl get pods -A --field-selector=status.phase=Running -o custom-columns=NAMESPACE:.metadata.namespace,NAME:.metadata.name,READY:.status.containerStatuses[0].readyReplicas/,.status.replicas,STATUS:.status.phase,RESTARTS:.status.containerStatuses[0].restartCount,AGE:.metadata.creationTimestamp --no-headers
      register: running_pods
      changed_when: false
      failed_when: false

    - name: Print Running Pods
      debug:
        msg: |
          NAMESPACE   NAME                                     READY   STATUS    RESTARTS   AGE
          {% for line in running_pods.stdout_lines %}
          {{ line }}
          {% endfor %}
      when: running_pods.stdout_lines | length > 0

    - name: Debug Running Pods Output
      debug:
        var: running_pods.stdout
      when: running_pods.stdout_lines | length == 0

    - name: Check Non-Running Pods in Namespaces
      shell: kubectl get pods -A --field-selector=status.phase!=Running -o custom-columns=NAMESPACE:.metadata.namespace,NAME:.metadata.name,READY:.status.containerStatuses[0].readyReplicas/,.status.replicas,STATUS:.status.phase,RESTARTS:.status.containerStatuses[0].restartCount,AGE:.metadata.creationTimestamp --no-headers
      register: non_running_pods
      changed_when: false
      failed_when: false

    - name: Print Non-Running Pods
      debug:
        msg: |
          NAMESPACE   NAME                                     READY   STATUS    RESTARTS   AGE
          {% for line in non_running_pods.stdout_lines %}
          {{ line }}
          {% endfor %}
      when: non_running_pods.stdout_lines | length > 0

    - name: Debug Non-Running Pods Output
      debug:
        var: non_running_pods.stdout
      when: non_running_pods.stdout_lines | length == 0
