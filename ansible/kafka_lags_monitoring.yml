- name: Display Kafka consumer group status
  hosts: ingestion-cluster-kafka
  gather_facts: no
  tasks:
    - name: Loop through Kafka consumer groups and check lag status
      command: /opt/kafka/bin/kafka-consumer-groups.sh --bootstrap-server "localhost:9092" --describe --group "{{ item }}"
      register: consumer_group_output
      loop:
        - "dev-audit-event-generator-group"
        - "telemetry-group"
        - "prometheus-metrics-consumer"
        - "dev-post-publish-processor-group"
        - "ml-project-service"
        - "dev-audit-history-indexer-group"
        - "learning-127.0.1.1"
        - "dev-search-indexer-group"
        - "outbound"
        - "dev-enrolment-reconciliation-group"
        - "devsamiksha"
        - "dev-relation-cache-updater-group"
        - "dev-content-publish-group"
        - "dev-qrcode-image-generator-group"
      loop_control:
        label: "{{ item }}"
    - name: Generate formatted table for Kafka lag status
      debug:
        msg: |
          {% set lag_output = [] %}
          {% for item in consumer_group_output.results %}
          {% if "no active members" in item.stdout %}
          Consumer group '{{ item.item }}' has no active members.
          {% else %}
          +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
          |   GROUP                           |       TOPIC          |    PARTITION  |   CURRENT-OFFSET |  LOG-END-OFFSET |   LAG  | CONSUMER-ID      |    HOST     |   CLIENT-ID       |
          +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
          {{ item.stdout | regex_replace('.*GROUP[^\\n]*\\n([\\s\\S]*)LAG.*', '\\1') | regex_replace('^[\\s\\S]*GROUP[^\\n]*\\n[\\s\\S]*PARTITION.*\\n', '') | regex_replace('^\\n|\\n$', '') | regex_replace('(\\s{2,})', ' | ') | regex_replace('(\\s{2,})', ' ') | trim }}
          {% set lag = item.stdout | regex_replace('.*LAG[^0-9]*([0-9]+)[\\s\\S]*$', '\\1') | int %}
          {% if lag <= 9 %}
          Kafka lag for group '{{ item.item }}' is normal (0 to 9)
          {% else %}
          Kafka lag for group '{{ item.item }}' is high
          {% endif %}
          +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
          {% endif %}
          {% endfor %}
      loop: "{{ consumer_group_output.results }}"
      loop_control:
        label: "{{ item.item }}"
