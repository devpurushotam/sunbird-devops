---
- name: Display Kafka consumer group status with structured table format
  hosts: ingestion-cluster-kafka
  gather_facts: no
  tasks:
    - name: Loop through Kafka consumer groups and check lag status
      command: /opt/kafka/bin/kafka-consumer-groups.sh --bootstrap-server "localhost:9092" --describe --group "{{ item }}"
      register: consumer_group_output
      loop:
        - "dev-audit-event-generator-group"
        - "telemetry-group"
        - "prometheus-metrics-consumer"
        - "dev-post-publish-processor-group"
        - "ml-project-service"
        - "dev-audit-history-indexer-group"
        - "learning-127.0.1.1"
        - "dev-search-indexer-group"
        - "outbound"
        - "dev-enrolment-reconciliation-group"
        - "devsamiksha"
        - "dev-relation-cache-updater-group"
        - "dev-content-publish-group"
        - "dev-qrcode-image-generator-group"
      loop_control:
        label: "{{ item }}"

    - name: Print Kafka lag status for each group in table format
      debug:
        msg: |
          Consumer group '{{ item.item }}' has no active members.
          {% for line in item.stdout_lines %}
          {% if loop.first %}
          {{ line }}  {# This prints the header line as is #}
          |---------------------------------|------------------|-----------|----------------|-----------------|--------|---------------|---------|-----------------------|
          {% else %}
          | {{ '%-33s' | format(line.split()[0] | default('', true)) }} | {{ '%-18s' | format(line.split()[1] | default('', true)) }} | {{ '%-9s' | format(line.split()[2] | default('', true)) }} | {{ '%-14s' | format(line.split()[3] | default('', true)) }} | {{ '%-15s' | format(line.split()[4] | default('', true)) }} | {{ '%-6s' | format(line.split()[5] | default('', true)) }} | {{ '%-13s' | format(line.split()[6] | default('', true)) }} | {{ '%-7s' | format(line.split()[7] | default('', true)) }} | {{ '%-21s' | format(line.split()[8] | default('', true)) }} |
          {% endif %}
          {% endfor %}
      loop: "{{ consumer_group_output.results }}"
      loop_control:
        label: "{{ item.item }}"
