- name: Display Kafka consumer group status
  hosts: ingestion-cluster-kafka
  gather_facts: no
  tasks:
    - name: Loop through Kafka consumer groups and check lag status
      command: /opt/kafka/bin/kafka-consumer-groups.sh --bootstrap-server "localhost:9092" --describe --group "{{ item }}"
      register: consumer_group_output
      loop:
        - "dev-audit-event-generator-group"
        - "telemetry-group"
        - "prometheus-metrics-consumer"
        - "dev-post-publish-processor-group"
        - "ml-project-service"
        - "dev-audit-history-indexer-group"
        - "learning-127.0.1.1"
        - "dev-search-indexer-group"
        - "outbound"
        - "dev-enrolment-reconciliation-group"
        - "devsamiksha"
        - "dev-relation-cache-updater-group"
        - "dev-content-publish-group"
        - "dev-qrcode-image-generator-group"
      loop_control:
        label: "{{ item }}"
    
    - name: Generate Kafka group status table
      debug:
        msg: |
          +---------------------------------------+---------------------------------------+------------+----------------+----------------+---------------+---------------+---------------+---------------+
          | GROUP                                 | TOPIC                                 | PARTITION  | CURRENT-OFFSET | LOG-END-OFFSET | LAG           | CONSUMER-ID   | HOST          | CLIENT-ID     |
          +---------------------------------------+---------------------------------------+------------+----------------+----------------+---------------+---------------+---------------+---------------+
          {% for result in consumer_group_output.results %}
          {% set lag = result.stdout | regex_replace('.*LAG\\s+(\\d+).*', '\\1') | int %}
          | {{ result.item | string | regex_replace('^', ' ') }} | {{ result.stdout | regex_replace('.*TOPIC\\s+(\\S+).*', '\\1') | string | regex_replace('^', ' ') }} | {{ result.stdout | regex_replace('.*PARTITION\\s+(\\d+).*', '\\1') | string | regex_replace('^', ' ') }} | {{ result.stdout | regex_replace('.*CURRENT-OFFSET\\s+(\\d+).*', '\\1') | string | regex_replace('^', ' ') }} | {{ result.stdout | regex_replace('.*LOG-END-OFFSET\\s+(\\d+).*', '\\1') | string | regex_replace('^', ' ') }} | {{ lag | string | regex_replace('^', ' ') }} | {{ result.stdout | regex_replace('.*CONSUMER-ID\\s+(\\S+).*', '\\1') | string | regex_replace('^', ' ') }} | {{ result.stdout | regex_replace('.*HOST\\s+(\\S+).*', '\\1') | string | regex_replace('^', ' ') }} | {{ result.stdout | regex_replace('.*CLIENT-ID\\s+(\\S+).*', '\\1') | string | regex_replace('^', ' ') }} |
          {% endfor %}
          +---------------------------------------+---------------------------------------+------------+----------------+----------------+---------------+---------------+---------------+---------------+
      loop: "{{ consumer_group_output.results }}"
      loop_control:
        label: "{{ item.item }}"
